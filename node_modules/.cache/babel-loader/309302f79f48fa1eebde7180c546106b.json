{"remainingRequest":"/Users/huangweihusn/frank_code/frank-portal/node_modules/babel-loader/lib/index.js!/Users/huangweihusn/frank_code/frank-portal/node_modules/eslint-loader/index.js??ref--13-0!/Users/huangweihusn/frank_code/frank-portal/src/auth/authGuard.js","dependencies":[{"path":"/Users/huangweihusn/frank_code/frank-portal/src/auth/authGuard.js","mtime":1619800858233},{"path":"/Users/huangweihusn/frank_code/frank-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangweihusn/frank_code/frank-portal/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/huangweihusn/frank_code/frank-portal/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgZ2V0SW5zdGFuY2UgfSBmcm9tICIuL2luZGV4IjsKZXhwb3J0IHZhciBhdXRoR3VhcmQgPSBmdW5jdGlvbiBhdXRoR3VhcmQodG8sIGZyb20sIG5leHQpIHsKICB2YXIgYXV0aFNlcnZpY2UgPSBnZXRJbnN0YW5jZSgpOwoKICB2YXIgZm4gPSBmdW5jdGlvbiBmbigpIHsKICAgIC8vIElmIHRoZSB1c2VyIGlzIGF1dGhlbnRpY2F0ZWQsIGNvbnRpbnVlIHdpdGggdGhlIHJvdXRlCiAgICBpZiAoYXV0aFNlcnZpY2UuaXNBdXRoZW50aWNhdGVkKSB7CiAgICAgIHJldHVybiBuZXh0KCk7CiAgICB9IC8vIE90aGVyd2lzZSwgbG9nIGluIAoKCiAgICBhdXRoU2VydmljZS5sb2dpbldpdGhSZWRpcmVjdCh7CiAgICAgIGFwcFN0YXRlOiB7CiAgICAgICAgdGFyZ2V0VXJsOiB0by5mdWxsUGF0aAogICAgICB9CiAgICB9KTsKICB9OyAvLyBJZiBsb2FkaW5nIGhhcyBhbHJlYWR5IGZpbmlzaGVkLCBjaGVjayB0aGUgYXV0aCBzdGF0ZSB1c2luZyBgZm4oKWAKCgogIGlmICghYXV0aFNlcnZpY2UubG9hZGluZykgewogICAgcmV0dXJuIGZuKCk7CiAgfSAvLyBXYXRjaCBmb3IgdGhlIGxvYWRpbmcgcHJvcGVydHkgdG8gY2hhbmdlIGJlZm9yZSBjaGVja2luZyBpc0F1dGhlbnRpY2F0ZWQKCgogIGF1dGhTZXJ2aWNlLiR3YXRjaCgibG9hZGluZyIsIGZ1bmN0aW9uIChsb2FkaW5nKSB7CiAgICBpZiAobG9hZGluZyA9PT0gZmFsc2UpIHsKICAgICAgcmV0dXJuIGZuKCk7CiAgICB9CiAgfSk7Cn07"},{"version":3,"sources":["/Users/huangweihusn/frank_code/frank-portal/src/auth/authGuard.js"],"names":["getInstance","authGuard","to","from","next","authService","fn","isAuthenticated","loginWithRedirect","appState","targetUrl","fullPath","loading","$watch"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AACzC,MAAMC,WAAW,GAAGL,WAAW,EAA/B;;AAEA,MAAMM,EAAE,GAAG,SAALA,EAAK,GAAM;AACb;AACA,QAAID,WAAW,CAACE,eAAhB,EAAiC;AAC7B,aAAOH,IAAI,EAAX;AACH,KAJY,CAMb;;;AACAC,IAAAA,WAAW,CAACG,iBAAZ,CAA8B;AAAEC,MAAAA,QAAQ,EAAE;AAACC,QAAAA,SAAS,EAAER,EAAE,CAACS;AAAf;AAAZ,KAA9B;AACH,GARD,CAHyC,CAazC;;;AACA,MAAI,CAACN,WAAW,CAACO,OAAjB,EAA0B;AACtB,WAAON,EAAE,EAAT;AACH,GAhBwC,CAkBzC;;;AACAD,EAAAA,WAAW,CAACQ,MAAZ,CAAmB,SAAnB,EAA8B,UAAAD,OAAO,EAAI;AACrC,QAAIA,OAAO,KAAK,KAAhB,EAAuB;AACnB,aAAON,EAAE,EAAT;AACH;AACJ,GAJD;AAKH,CAxBM","sourcesContent":["import { getInstance } from \"./index\";\n\nexport const authGuard = (to, from, next) => {\n    const authService = getInstance();\n\n    const fn = () => {\n        // If the user is authenticated, continue with the route\n        if (authService.isAuthenticated) {\n            return next();\n        }\n\n        // Otherwise, log in \n        authService.loginWithRedirect({ appState: {targetUrl: to.fullPath} });\n    };\n\n    // If loading has already finished, check the auth state using `fn()`\n    if (!authService.loading) {\n        return fn();\n    }\n\n    // Watch for the loading property to change before checking isAuthenticated\n    authService.$watch(\"loading\", loading => {\n        if (loading === false) {\n            return fn();\n        }\n    });\n};"]}]}