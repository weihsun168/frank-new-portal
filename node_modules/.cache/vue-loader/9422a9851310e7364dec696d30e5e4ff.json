{"remainingRequest":"/Users/huangweihusn/frank_code/frank-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangweihusn/frank_code/frank-portal/src/components/calendar/Calendar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangweihusn/frank_code/frank-portal/src/components/calendar/Calendar.vue","mtime":1619882812374},{"path":"/Users/huangweihusn/frank_code/frank-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangweihusn/frank_code/frank-portal/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/huangweihusn/frank_code/frank-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangweihusn/frank_code/frank-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmltcG9ydCBDYWxlbmRhciBmcm9tICd0dWktY2FsZW5kYXInOwoKY29uc3Qgc2NoZWR1bGVOZWVkUHJvcCA9IFsKICAgICdzdGFydCcsCiAgICAnY2F0ZWdvcnknCl07CgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnVG9hc3RVSUNhbGVuZGFyJywKICAgIHByb3BzOiB7CiAgICAgICAgY2FsZW5kYXJzOiB7CiAgICAgICAgICAgIHR5cGU6IEFycmF5LAogICAgICAgICAgICBkZWZhdWx0KCkgewogICAgICAgICAgICAgICAgcmV0dXJuIFtdOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBzY2hlZHVsZXM6IHsKICAgICAgICAgICAgdHlwZTogQXJyYXksCiAgICAgICAgICAgIGRlZmF1bHQoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gW107CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHZhbGlkYXRvcih2YWx1ZSkgewogICAgICAgICAgICAgICAgbGV0IG5vdEhhdmUgPSBmYWxzZTsKCiAgICAgICAgICAgICAgICB2YWx1ZS5mb3JFYWNoKHNjaGVkdWxlID0+IHsKICAgICAgICAgICAgICAgICAgICBub3RIYXZlID0gc2NoZWR1bGVOZWVkUHJvcC5zb21lKHByb3AgPT4gIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzY2hlZHVsZSwgcHJvcCkpOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgcmV0dXJuICFub3RIYXZlOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB2aWV3OiB7CiAgICAgICAgICAgIHR5cGU6IFN0cmluZywKICAgICAgICAgICAgZGVmYXVsdDogJ3dlZWsnCiAgICAgICAgfSwKICAgICAgICB0YXNrVmlldzogewogICAgICAgICAgICB0eXBlOiBbQm9vbGVhbiwgQXJyYXldLAogICAgICAgICAgICBkZWZhdWx0OiB0cnVlCiAgICAgICAgfSwKICAgICAgICBzY2hlZHVsZVZpZXc6IHsKICAgICAgICAgICAgdHlwZTogW0Jvb2xlYW4sIEFycmF5XSwKICAgICAgICAgICAgZGVmYXVsdDp0cnVlCiAgICAgICAgfSwKICAgICAgICB0aGVtZTogewogICAgICAgICAgICB0eXBlOiBPYmplY3QsCiAgICAgICAgICAgIGRlZmF1bHQoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4ge307CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHRlbXBsYXRlOiB7CiAgICAgICAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgICAgICAgZGVmYXVsdCgpIHsKICAgICAgICAgICAgICAgIHJldHVybiB7fTsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgd2VlazogewogICAgICAgICAgICB0eXBlOiBPYmplY3QsCiAgICAgICAgICAgIGRlZmF1bHQoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4ge307CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIG1vbnRoOiB7CiAgICAgICAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgICAgICAgZGVmYXVsdCgpIHsKICAgICAgICAgICAgICAgIHJldHVybiB7fTsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgdXNlQ3JlYXRpb25Qb3B1cDogewogICAgICAgICAgICB0eXBlOiBCb29sZWFuLAogICAgICAgICAgICBkZWZhdWx0OiB0cnVlCiAgICAgICAgfSwKICAgICAgICB1c2VEZXRhaWxQb3B1cDogewogICAgICAgICAgICB0eXBlOiBCb29sZWFuLAogICAgICAgICAgICBkZWZhdWx0OiB0cnVlCiAgICAgICAgfSwKICAgICAgICB0aW1lem9uZXM6IHsKICAgICAgICAgICAgdHlwZTogQXJyYXksCiAgICAgICAgICAgIGRlZmF1bHQoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gW107CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGRpc2FibGVEYmxDbGljazogewogICAgICAgICAgICB0eXBlOiBCb29sZWFuLAogICAgICAgICAgICBkZWZhdWx0OiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgZGlzYWJsZUNsaWNrOiB7CiAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgICAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICBpc1JlYWRPbmx5OiB7CiAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgICAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICB1c2FnZVN0YXRpc3RpY3M6IHsKICAgICAgICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgICAgICAgZGVmYXVsdDogZmFsc2UKICAgICAgICB9CiAgICB9LAogICAgd2F0Y2g6IHsKICAgICAgICBjYWxlbmRhcnMobmV3VmFsdWUpIHsKICAgICAgICAgICAgdGhpcy5jYWxlbmRhckluc3RhbmNlLnNldENhbGVuZGFycyhuZXdWYWx1ZSk7CiAgICAgICAgfSwKICAgICAgICBzY2hlZHVsZXMoKSB7CiAgICAgICAgICAgIHRoaXMuY2FsZW5kYXJJbnN0YW5jZS5jbGVhcigpOwogICAgICAgICAgICB0aGlzLnJlZmxlY3RTY2hlZHVsZXMoKTsKICAgICAgICB9LAogICAgICAgIHZpZXcobmV3VmFsdWUpIHsKICAgICAgICAgICAgdGhpcy5jYWxlbmRhckluc3RhbmNlLmNoYW5nZVZpZXcobmV3VmFsdWUsIHRydWUpOwogICAgICAgIH0sCiAgICAgICAgdGFza1ZpZXcobmV3VmFsdWUpIHsKICAgICAgICAgICAgdGhpcy5jYWxlbmRhckluc3RhbmNlLnNldE9wdGlvbnMoe3Rhc2tWaWV3OiBuZXdWYWx1ZX0pOwogICAgICAgIH0sCiAgICAgICAgc2NoZWR1bGVWaWV3KG5ld1ZhbHVlKSB7CiAgICAgICAgICAgIHRoaXMuY2FsZW5kYXJJbnN0YW5jZS5zZXRPcHRpb25zKHtzY2hlZHVsZVZpZXc6IG5ld1ZhbHVlfSk7CiAgICAgICAgfSwKICAgICAgICB0aGVtZTogewogICAgICAgICAgICBoYW5kbGVyKG5ld1ZhbHVlKSB7CiAgICAgICAgICAgICAgICB0aGlzLmNhbGVuZGFySW5zdGFuY2Uuc2V0VGhlbWUodGhpcy5jbG9uZURhdGEobmV3VmFsdWUpKTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZGVlcDogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgd2VlazogewogICAgICAgICAgICBoYW5kbGVyKG5ld1ZhbHVlKSB7CiAgICAgICAgICAgICAgICBjb25zdCBzaWxlbnQgPSB0aGlzLnZpZXcgIT09ICd3ZWVrJyAmJiB0aGlzLnZpZXcgIT09ICdkYXknOwogICAgICAgICAgICAgICAgdGhpcy5jYWxlbmRhckluc3RhbmNlLnNldE9wdGlvbnMoe3dlZWs6IHRoaXMuY2xvbmVEYXRhKG5ld1ZhbHVlKX0sIHNpbGVudCk7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGRlZXA6IHRydWUKICAgICAgICB9LAogICAgICAgIG1vbnRoOiB7CiAgICAgICAgICAgIGhhbmRsZXIobmV3VmFsdWUpIHsKICAgICAgICAgICAgICAgIGNvbnN0IHNpbGVudCA9IHRoaXMudmlldyAhPT0gJ21vbnRoJzsKICAgICAgICAgICAgICAgIHRoaXMuY2FsZW5kYXJJbnN0YW5jZS5zZXRPcHRpb25zKHttb250aDogdGhpcy5jbG9uZURhdGEobmV3VmFsdWUpfSwgc2lsZW50KTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZGVlcDogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgdGltZXpvbmVzKG5ld1ZhbHVlKSB7CiAgICAgICAgICAgIHRoaXMuY2FsZW5kYXJJbnN0YW5jZS5zZXRPcHRpb25zKHt0aW1lem9uZXM6bmV3VmFsdWUgfSk7CiAgICAgICAgfSwKICAgICAgICBkaXNhYmxlRGJsQ2xpY2sobmV3VmFsdWUpIHsKICAgICAgICAgICAgdGhpcy5jYWxlbmRhckluc3RhbmNlLnNldE9wdGlvbnMoe2Rpc2FibGVEYmxDbGljazogbmV3VmFsdWV9KTsKICAgICAgICB9LAogICAgICAgIGRpc2FibGVDbGljayhuZXdWYWx1ZSkgewogICAgICAgICAgICB0aGlzLmNhbGVuZGFySW5zdGFuY2Uuc2V0T3B0aW9ucyh7ZGlzYWJsZUNsaWNrOiBuZXdWYWx1ZX0pOwogICAgICAgIH0sCiAgICAgICAgaXNSZWFkT25seShuZXdWYWx1ZSkgewogICAgICAgICAgICB0aGlzLmNhbGVuZGFySW5zdGFuY2Uuc2V0T3B0aW9ucyh7aXNSZWFkT25seTogbmV3VmFsdWV9KTsKICAgICAgICB9CiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgICB0aGlzLmNhbGVuZGFySW5zdGFuY2UgPSBuZXcgQ2FsZW5kYXIodGhpcy4kcmVmcy50dWlDYWxlbmRhciwgewogICAgICAgICAgICBkZWZhdWx0VmlldzogdGhpcy52aWV3LAogICAgICAgICAgICB0YXNrVmlldzogdGhpcy50YXNrVmlldywKICAgICAgICAgICAgc2NoZWR1bGVWaWV3OiB0aGlzLnNjaGVkdWxlVmlldywKICAgICAgICAgICAgdGhlbWU6IHRoaXMudGhlbWUsCiAgICAgICAgICAgIHRlbXBsYXRlOiB0aGlzLnRlbXBsYXRlLAogICAgICAgICAgICB3ZWVrOiB0aGlzLndlZWssCiAgICAgICAgICAgIG1vbnRoOiB0aGlzLm1vbnRoLAogICAgICAgICAgICBjYWxlbmRhcnM6IHRoaXMuY2FsZW5kYXJzLAogICAgICAgICAgICB1c2VDcmVhdGlvblBvcHVwOiB0aGlzLnVzZUNyZWF0aW9uUG9wdXAsCiAgICAgICAgICAgIHVzZURldGFpbFBvcHVwOiB0aGlzLnVzZURldGFpbFBvcHVwLAogICAgICAgICAgICB0aW1lem9uZXM6IHRoaXMudGltZXpvbmVzLAogICAgICAgICAgICBkaXNhYmxlRGJsQ2xpY2s6IHRoaXMuZGlzYWJsZURibENsaWNrLAogICAgICAgICAgICBkaXNhYmxlQ2xpY2s6IHRoaXMuZGlzYWJsZUNsaWNrLAogICAgICAgICAgICBpc1JlYWRPbmx5OiB0aGlzLmlzUmVhZE9ubHksCiAgICAgICAgICAgIHVzYWdlU3RhdGlzdGljczogdGhpcy51c2FnZVN0YXRpc3RpY3MKICAgICAgICB9KTsKICAgICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXJzKCk7CiAgICAgICAgdGhpcy5yZWZsZWN0U2NoZWR1bGVzKCk7CiAgICB9LAogICAgYmVmb3JlRGVzdHJveSgpIHsKICAgICAgICB0aGlzLmNhbGVuZGFySW5zdGFuY2Uub2ZmKCk7CiAgICAgICAgdGhpcy5jYWxlbmRhckluc3RhbmNlLmRlc3Ryb3koKTsKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgY2xvbmVEYXRhKGRhdGEpIHsKICAgICAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoZGF0YSkpOwogICAgICAgIH0sCiAgICAgICAgYWRkRXZlbnRMaXN0ZW5lcnMoKSB7CiAgICAgICAgICAgIGZvciAoY29uc3QgZXZlbnROYW1lIG9mIE9iamVjdC5rZXlzKHRoaXMuJGxpc3RlbmVycykpIHsKICAgICAgICAgICAgICAgIHRoaXMuY2FsZW5kYXJJbnN0YW5jZS5vbihldmVudE5hbWUsICguLi5hcmdzKSA9PiB0aGlzLiRlbWl0KGV2ZW50TmFtZSwgLi4uYXJncykpOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICByZWZsZWN0U2NoZWR1bGVzKCkgewogICAgICAgICAgICBpZiAodGhpcy5zY2hlZHVsZXMubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgdGhpcy5pbnZva2UoJ2NyZWF0ZVNjaGVkdWxlcycsIHRoaXMuc2NoZWR1bGVzKTsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgZ2V0Um9vdEVsZW1lbnQoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLiRyZWZzLnR1aUNhbGVuZGFyOwogICAgICAgIH0sCiAgICAgICAgaW52b2tlKG1ldGhvZE5hbWUsIC4uLmFyZ3MpIHsKICAgICAgICAgICAgbGV0IHJlc3VsdDsKCiAgICAgICAgICAgIGlmICh0aGlzLmNhbGVuZGFySW5zdGFuY2VbbWV0aG9kTmFtZV0pIHsKICAgICAgICAgICAgICAgIHJlc3VsdCA9IHRoaXMuY2FsZW5kYXJJbnN0YW5jZVttZXRob2ROYW1lXSguLi5hcmdzKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgICAgICB9CiAgICB9Cn07Cg=="},{"version":3,"sources":["Calendar.vue"],"names":[],"mappings":";;;;;AAKA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Calendar.vue","sourceRoot":"src/components/calendar","sourcesContent":["<template>\n    <div ref=\"tuiCalendar\">\n    </div>\n</template>\n<script>\nimport Calendar from 'tui-calendar';\n\nconst scheduleNeedProp = [\n    'start',\n    'category'\n];\n\nexport default {\n    name: 'ToastUICalendar',\n    props: {\n        calendars: {\n            type: Array,\n            default() {\n                return [];\n            }\n        },\n        schedules: {\n            type: Array,\n            default() {\n                return [];\n            },\n            validator(value) {\n                let notHave = false;\n\n                value.forEach(schedule => {\n                    notHave = scheduleNeedProp.some(prop => !Object.prototype.hasOwnProperty.call(schedule, prop));\n                });\n\n                return !notHave;\n            }\n        },\n        view: {\n            type: String,\n            default: 'week'\n        },\n        taskView: {\n            type: [Boolean, Array],\n            default: true\n        },\n        scheduleView: {\n            type: [Boolean, Array],\n            default:true\n        },\n        theme: {\n            type: Object,\n            default() {\n                return {};\n            }\n        },\n        template: {\n            type: Object,\n            default() {\n                return {};\n            }\n        },\n        week: {\n            type: Object,\n            default() {\n                return {};\n            }\n        },\n        month: {\n            type: Object,\n            default() {\n                return {};\n            }\n        },\n        useCreationPopup: {\n            type: Boolean,\n            default: true\n        },\n        useDetailPopup: {\n            type: Boolean,\n            default: true\n        },\n        timezones: {\n            type: Array,\n            default() {\n                return [];\n            }\n        },\n        disableDblClick: {\n            type: Boolean,\n            default: false\n        },\n        disableClick: {\n            type: Boolean,\n            default: false\n        },\n        isReadOnly: {\n            type: Boolean,\n            default: false\n        },\n        usageStatistics: {\n            type: Boolean,\n            default: false\n        }\n    },\n    watch: {\n        calendars(newValue) {\n            this.calendarInstance.setCalendars(newValue);\n        },\n        schedules() {\n            this.calendarInstance.clear();\n            this.reflectSchedules();\n        },\n        view(newValue) {\n            this.calendarInstance.changeView(newValue, true);\n        },\n        taskView(newValue) {\n            this.calendarInstance.setOptions({taskView: newValue});\n        },\n        scheduleView(newValue) {\n            this.calendarInstance.setOptions({scheduleView: newValue});\n        },\n        theme: {\n            handler(newValue) {\n                this.calendarInstance.setTheme(this.cloneData(newValue));\n            },\n            deep: true\n        },\n        week: {\n            handler(newValue) {\n                const silent = this.view !== 'week' && this.view !== 'day';\n                this.calendarInstance.setOptions({week: this.cloneData(newValue)}, silent);\n            },\n            deep: true\n        },\n        month: {\n            handler(newValue) {\n                const silent = this.view !== 'month';\n                this.calendarInstance.setOptions({month: this.cloneData(newValue)}, silent);\n            },\n            deep: true\n        },\n        timezones(newValue) {\n            this.calendarInstance.setOptions({timezones:newValue });\n        },\n        disableDblClick(newValue) {\n            this.calendarInstance.setOptions({disableDblClick: newValue});\n        },\n        disableClick(newValue) {\n            this.calendarInstance.setOptions({disableClick: newValue});\n        },\n        isReadOnly(newValue) {\n            this.calendarInstance.setOptions({isReadOnly: newValue});\n        }\n    },\n    mounted() {\n        this.calendarInstance = new Calendar(this.$refs.tuiCalendar, {\n            defaultView: this.view,\n            taskView: this.taskView,\n            scheduleView: this.scheduleView,\n            theme: this.theme,\n            template: this.template,\n            week: this.week,\n            month: this.month,\n            calendars: this.calendars,\n            useCreationPopup: this.useCreationPopup,\n            useDetailPopup: this.useDetailPopup,\n            timezones: this.timezones,\n            disableDblClick: this.disableDblClick,\n            disableClick: this.disableClick,\n            isReadOnly: this.isReadOnly,\n            usageStatistics: this.usageStatistics\n        });\n        this.addEventListeners();\n        this.reflectSchedules();\n    },\n    beforeDestroy() {\n        this.calendarInstance.off();\n        this.calendarInstance.destroy();\n    },\n    methods: {\n        cloneData(data) {\n            return JSON.parse(JSON.stringify(data));\n        },\n        addEventListeners() {\n            for (const eventName of Object.keys(this.$listeners)) {\n                this.calendarInstance.on(eventName, (...args) => this.$emit(eventName, ...args));\n            }\n        },\n        reflectSchedules() {\n            if (this.schedules.length > 0) {\n                this.invoke('createSchedules', this.schedules);\n            }\n        },\n        getRootElement() {\n            return this.$refs.tuiCalendar;\n        },\n        invoke(methodName, ...args) {\n            let result;\n\n            if (this.calendarInstance[methodName]) {\n                result = this.calendarInstance[methodName](...args);\n            }\n\n            return result;\n        }\n    }\n};\n</script>"]}]}